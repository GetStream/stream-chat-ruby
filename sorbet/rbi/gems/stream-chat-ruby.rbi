# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/stream-chat-ruby/all/stream-chat-ruby.rbi
#
# stream-chat-ruby-3.0.0

module StreamChat
end
class StreamChat::Client
  def add_device(*args, &blk); end
  def api_key(*args, &blk); end
  def api_secret(*args, &blk); end
  def ban_user(*args, &blk); end
  def channel(*args, &blk); end
  def check_push(*args, &blk); end
  def check_sqs(*args, &blk); end
  def conn(*args, &blk); end
  def create_blocklist(*args, &blk); end
  def create_campaign(*args, &blk); end
  def create_channel_type(*args, &blk); end
  def create_command(*args, &blk); end
  def create_guest(*args, &blk); end
  def create_import(*args, &blk); end
  def create_import_url(*args, &blk); end
  def create_permission(*args, &blk); end
  def create_role(*args, &blk); end
  def create_segment(*args, &blk); end
  def create_token(*args, &blk); end
  def deactivate_user(*args, &blk); end
  def delete(*args, &blk); end
  def delete_blocklist(*args, &blk); end
  def delete_campaign(*args, &blk); end
  def delete_channel_type(*args, &blk); end
  def delete_channels(*args, &blk); end
  def delete_command(*args, &blk); end
  def delete_device(*args, &blk); end
  def delete_message(*args, &blk); end
  def delete_permission(*args, &blk); end
  def delete_push_provider(*args, &blk); end
  def delete_role(*args, &blk); end
  def delete_segment(*args, &blk); end
  def delete_user(*args, &blk); end
  def delete_users(*args, &blk); end
  def export_channels(*args, &blk); end
  def export_user(*args, &blk); end
  def flag_message(*args, &blk); end
  def flag_user(*args, &blk); end
  def get(*args, &blk); end
  def get_app_settings(*args, &blk); end
  def get_blocklist(*args, &blk); end
  def get_campaign(*args, &blk); end
  def get_channel_type(*args, &blk); end
  def get_command(*args, &blk); end
  def get_default_headers(*args, &blk); end
  def get_default_params(*args, &blk); end
  def get_devices(*args, &blk); end
  def get_export_channel_status(*args, &blk); end
  def get_import(*args, &blk); end
  def get_message(*args, &blk); end
  def get_permission(*args, &blk); end
  def get_rate_limits(*args, &blk); end
  def get_segment(*args, &blk); end
  def get_task(*args, &blk); end
  def get_user_agent(*args, &blk); end
  def initialize(*args, &blk); end
  def list_blocklists(*args, &blk); end
  def list_campaigns(*args, &blk); end
  def list_channel_types(*args, &blk); end
  def list_commands(*args, &blk); end
  def list_imports(*args, &blk); end
  def list_permissions(*args, &blk); end
  def list_push_providers(*args, &blk); end
  def list_roles(*args, &blk); end
  def list_segments(*args, &blk); end
  def make_http_request(*args, &blk); end
  def mark_all_read(*args, &blk); end
  def mute_user(*args, &blk); end
  def parse_response(*args, &blk); end
  def patch(*args, &blk); end
  def pin_message(*args, &blk); end
  def post(*args, &blk); end
  def put(*args, &blk); end
  def query_banned_users(*args, &blk); end
  def query_channels(*args, &blk); end
  def query_flag_reports(*args, &blk); end
  def query_message_flags(*args, &blk); end
  def query_users(*args, &blk); end
  def reactivate_user(*args, &blk); end
  def remove_shadow_ban(*args, &blk); end
  def resume_campaign(*args, &blk); end
  def review_flag_report(*args, &blk); end
  def revoke_tokens(*args, &blk); end
  def revoke_user_token(*args, &blk); end
  def revoke_users_token(*args, &blk); end
  def run_message_action(*args, &blk); end
  def schedule_campaign(*args, &blk); end
  def search(*args, &blk); end
  def self.from_env(*args, &blk); end
  def send_file(*args, &blk); end
  def send_user_event(*args, &blk); end
  def set_http_client(*args, &blk); end
  def shadow_ban(*args, &blk); end
  def stop_campaign(*args, &blk); end
  def test_campaign(*args, &blk); end
  def translate_message(*args, &blk); end
  def unban_user(*args, &blk); end
  def unflag_message(*args, &blk); end
  def unflag_user(*args, &blk); end
  def unmute_user(*args, &blk); end
  def unpin_message(*args, &blk); end
  def update_app_settings(*args, &blk); end
  def update_blocklist(*args, &blk); end
  def update_campaign(*args, &blk); end
  def update_channel_type(*args, &blk); end
  def update_command(*args, &blk); end
  def update_message(*args, &blk); end
  def update_message_partial(*args, &blk); end
  def update_permission(*args, &blk); end
  def update_segment(*args, &blk); end
  def update_user(*args, &blk); end
  def update_user_partial(*args, &blk); end
  def update_users(*args, &blk); end
  def update_users_partial(*args, &blk); end
  def upsert_push_provider(*args, &blk); end
  def upsert_user(*args, &blk); end
  def upsert_users(*args, &blk); end
  def verify_webhook(*args, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
